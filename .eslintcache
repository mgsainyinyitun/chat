[{"/home/sainyi/projects/reacts/chat/src/index.js":"1","/home/sainyi/projects/reacts/chat/src/components/App.js":"2","/home/sainyi/projects/reacts/chat/src/components/users/Login/LoginPage.js":"3","/home/sainyi/projects/reacts/chat/src/components/users/Login/LoginForm.js":"4","/home/sainyi/projects/reacts/chat/src/components/users/Register/RegisterPage.js":"5","/home/sainyi/projects/reacts/chat/src/components/users/Register/RegisterForm.js":"6","/home/sainyi/projects/reacts/chat/src/components/users/home/Home.js":"7","/home/sainyi/projects/reacts/chat/src/history.js":"8","/home/sainyi/projects/reacts/chat/src/routes/UserRoute.js":"9","/home/sainyi/projects/reacts/chat/src/components/leftNavigation/LeftNavigation.js":"10","/home/sainyi/projects/reacts/chat/src/routes/FriendsRoute.js":"11","/home/sainyi/projects/reacts/chat/src/routes/constant.js":"12","/home/sainyi/projects/reacts/chat/src/components/chats/MainChat.js":"13","/home/sainyi/projects/reacts/chat/src/components/users/Profile/Profile.js":"14","/home/sainyi/projects/reacts/chat/src/components/users/home/Main.js":"15","/home/sainyi/projects/reacts/chat/src/components/chats/ChatPlace.js":"16","/home/sainyi/projects/reacts/chat/src/components/chats/MessagePlace.js":"17","/home/sainyi/projects/reacts/chat/src/components/chats/Messages/MessageList.js":"18","/home/sainyi/projects/reacts/chat/src/components/chats/Messages/MessageItem.js":"19","/home/sainyi/projects/reacts/chat/src/components/chats/Messages/TestMessage.js":"20","/home/sainyi/projects/reacts/chat/src/components/Groups/Groups.js":"21","/home/sainyi/projects/reacts/chat/src/components/Groups/GroupsList.js":"22","/home/sainyi/projects/reacts/chat/src/redux/reducers/index.js":"23","/home/sainyi/projects/reacts/chat/src/redux/reducers/UserReducer.js":"24","/home/sainyi/projects/reacts/chat/src/redux/actions/Types.js":"25","/home/sainyi/projects/reacts/chat/src/redux/actions/index.js":"26","/home/sainyi/projects/reacts/chat/src/redux/actions/UserActions.js":"27","/home/sainyi/projects/reacts/chat/src/redux/actions/GeneralActions.js":"28","/home/sainyi/projects/reacts/chat/src/redux/reducers/GeneralReducer.js":"29","/home/sainyi/projects/reacts/chat/src/components/users/Account/Account.js":"30","/home/sainyi/projects/reacts/chat/src/components/users/Logout/Logout.js":"31","/home/sainyi/projects/reacts/chat/src/firebase.js":"32","/home/sainyi/projects/reacts/chat/src/components/users/home/Friends/AddFriendModal.js":"33","/home/sainyi/projects/reacts/chat/src/redux/actions/friendsActions.js":"34","/home/sainyi/projects/reacts/chat/src/redux/reducers/friendsReducers.js":"35","/home/sainyi/projects/reacts/chat/src/components/users/home/NotificationDrawer/NotificationDrawer.js":"36","/home/sainyi/projects/reacts/chat/src/redux/actions/messageActions.js":"37","/home/sainyi/projects/reacts/chat/src/redux/reducers/messageReducers.js":"38","/home/sainyi/projects/reacts/chat/src/components/users/home/Groups/NewGroupModal.js":"39","/home/sainyi/projects/reacts/chat/src/redux/actions/groupActions.js":"40","/home/sainyi/projects/reacts/chat/src/redux/reducers/groupReducers.js":"41","/home/sainyi/projects/reacts/chat/src/components/Groups/GroupChat.js":"42","/home/sainyi/projects/reacts/chat/src/components/Groups/GroupChatPlace.js":"43","/home/sainyi/projects/reacts/chat/src/components/Groups/AddGroupMemberModal.js":"44","/home/sainyi/projects/reacts/chat/src/components/Groups/GroupMessagesList.js":"45","/home/sainyi/projects/reacts/chat/src/components/Groups/GroupMessagesPlace.js":"46","/home/sainyi/projects/reacts/chat/src/components/Groups/GroupMessagesItem.js":"47","/home/sainyi/projects/reacts/chat/src/components/users/home/AboutUs/AboutUs.js":"48","/home/sainyi/projects/reacts/chat/src/components/users/home/InfoList.js":"49","/home/sainyi/projects/reacts/chat/src/components/users/Profile/EditProfileModal.js":"50","/home/sainyi/projects/reacts/chat/src/components/users/Profile/EditProfileForm.js":"51"},{"size":583,"mtime":1611899826683,"results":"52","hashOfConfig":"53"},{"size":1504,"mtime":1613204383835,"results":"54","hashOfConfig":"53"},{"size":1488,"mtime":1613363246253,"results":"55","hashOfConfig":"53"},{"size":2401,"mtime":1613232098182,"results":"56","hashOfConfig":"53"},{"size":944,"mtime":1613363394844,"results":"57","hashOfConfig":"53"},{"size":3575,"mtime":1612011899596,"results":"58","hashOfConfig":"53"},{"size":6230,"mtime":1613380591101,"results":"59","hashOfConfig":"53"},{"size":86,"mtime":1610360104688,"results":"60","hashOfConfig":"53"},{"size":1145,"mtime":1613209110447,"results":"61","hashOfConfig":"53"},{"size":5396,"mtime":1613209025784,"results":"62","hashOfConfig":"53"},{"size":737,"mtime":1612849248373,"results":"63","hashOfConfig":"53"},{"size":682,"mtime":1613208886786,"results":"64","hashOfConfig":"53"},{"size":1147,"mtime":1613043564673,"results":"65","hashOfConfig":"53"},{"size":2855,"mtime":1613380612701,"results":"66","hashOfConfig":"53"},{"size":1805,"mtime":1613226609623,"results":"67","hashOfConfig":"53"},{"size":1152,"mtime":1613047308977,"results":"68","hashOfConfig":"53"},{"size":3270,"mtime":1613223116144,"results":"69","hashOfConfig":"53"},{"size":1654,"mtime":1613030886842,"results":"70","hashOfConfig":"53"},{"size":1118,"mtime":1613031022396,"results":"71","hashOfConfig":"53"},{"size":1124,"mtime":1611828547676,"results":"72","hashOfConfig":"53"},{"size":227,"mtime":1613125938082,"results":"73","hashOfConfig":"53"},{"size":1109,"mtime":1613227316549,"results":"74","hashOfConfig":"53"},{"size":567,"mtime":1613039481607,"results":"75","hashOfConfig":"53"},{"size":1282,"mtime":1613379726456,"results":"76","hashOfConfig":"53"},{"size":1577,"mtime":1613376454349,"results":"77","hashOfConfig":"53"},{"size":165,"mtime":1613039271347,"results":"78","hashOfConfig":"53"},{"size":5559,"mtime":1613379846664,"results":"79","hashOfConfig":"53"},{"size":858,"mtime":1613210327798,"results":"80","hashOfConfig":"53"},{"size":343,"mtime":1613027460123,"results":"81","hashOfConfig":"53"},{"size":2495,"mtime":1613370551252,"results":"82","hashOfConfig":"53"},{"size":869,"mtime":1613208538721,"results":"83","hashOfConfig":"53"},{"size":1563,"mtime":1613225762946,"results":"84","hashOfConfig":"53"},{"size":2965,"mtime":1613226030486,"results":"85","hashOfConfig":"53"},{"size":4559,"mtime":1613194982890,"results":"86","hashOfConfig":"53"},{"size":1326,"mtime":1613194980184,"results":"87","hashOfConfig":"53"},{"size":2472,"mtime":1613032331530,"results":"88","hashOfConfig":"53"},{"size":4650,"mtime":1613194464030,"results":"89","hashOfConfig":"53"},{"size":1099,"mtime":1613113061379,"results":"90","hashOfConfig":"53"},{"size":1856,"mtime":1613125916238,"results":"91","hashOfConfig":"53"},{"size":3995,"mtime":1613208184884,"results":"92","hashOfConfig":"53"},{"size":1454,"mtime":1613195649422,"results":"93","hashOfConfig":"53"},{"size":741,"mtime":1613127410212,"results":"94","hashOfConfig":"53"},{"size":4086,"mtime":1613211474958,"results":"95","hashOfConfig":"53"},{"size":1955,"mtime":1613125376623,"results":"96","hashOfConfig":"53"},{"size":1600,"mtime":1613212681511,"results":"97","hashOfConfig":"53"},{"size":3545,"mtime":1613225132433,"results":"98","hashOfConfig":"53"},{"size":1568,"mtime":1613219828203,"results":"99","hashOfConfig":"53"},{"size":1375,"mtime":1613210181799,"results":"100","hashOfConfig":"53"},{"size":3184,"mtime":1613230593740,"results":"101","hashOfConfig":"53"},{"size":1278,"mtime":1613373627678,"results":"102","hashOfConfig":"53"},{"size":3148,"mtime":1613379858920,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"9wynps",{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"106"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"106"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/sainyi/projects/reacts/chat/src/index.js",[],["221","222"],"/home/sainyi/projects/reacts/chat/src/components/App.js",["223"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport _ from 'lodash';\nimport { Switch } from \"react-router-dom\";\nimport {UserRoute} from '../routes/UserRoute';\nimport {FriendsRoute} from '../routes/FriendsRoute';\nimport { \n    onAuthStateChangedSecond,\n    getFriendsList,\n    getFriendsRequestList,\n    getRealTimeReceivedMessage,\n    getRealTimeSentMessage,\n    getRealTimeMessages,\n    getUserSaveTheme,\n    getUserRelatedGroupsNotRealTime,\n } from '../redux/actions';\n\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            reload:true,\n        }\n    }\n    \n    componentDidMount = () =>{  \n        this.props.onAuthStateChangedSecond()\n        .then(()=>{\n            console.log(\"on auth state change finish!\",this.props.user);\n        })\n    }\n\n    render(){\n        return(\n            <div className='h-100'>\n                <Switch>\n                    {UserRoute}\n                    {FriendsRoute}\n                </Switch>\n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = state =>{\n    let user = {};\n    if(state.authUser.user){\n        user = state.authUser.user.data\n    }\n    return {\n        user:user\n    };\n}\nexport default connect(mapStateToProps,{\n    onAuthStateChangedSecond,\n    getFriendsList,\n    getFriendsRequestList,\n    getRealTimeReceivedMessage,\n    getRealTimeSentMessage,\n    getRealTimeMessages,\n    getUserSaveTheme,\n    getUserRelatedGroupsNotRealTime\n})(App);","/home/sainyi/projects/reacts/chat/src/components/users/Login/LoginPage.js",[],"/home/sainyi/projects/reacts/chat/src/components/users/Login/LoginForm.js",[],"/home/sainyi/projects/reacts/chat/src/components/users/Register/RegisterPage.js",[],"/home/sainyi/projects/reacts/chat/src/components/users/Register/RegisterForm.js",[],"/home/sainyi/projects/reacts/chat/src/components/users/home/Home.js",["224"],"/home/sainyi/projects/reacts/chat/src/history.js",[],"/home/sainyi/projects/reacts/chat/src/routes/UserRoute.js",[],"/home/sainyi/projects/reacts/chat/src/components/leftNavigation/LeftNavigation.js",["225"],"import React from \"react\";\nimport {connect} from 'react-redux';\nimport { Menu, Switch,Button,Badge } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser,faUserFriends,faCog,faUsers,faHome, faPlus, faAddressBook, faLanguage } from '@fortawesome/free-solid-svg-icons'\nimport {Link} from 'react-router-dom';\nimport { PAGE,ROUTE } from '../../routes/constant';\nimport {\n    changeTheme,\n    setCurrentChatFriend,\n    setCurrentGroup,\n  } from '../../redux/actions';\n\nconst { SubMenu } = Menu;\n\nclass LeftNavigation extends React.Component{\n\n constructor (props){\n   super(props);\n   this.state = {\n     theme:this.props.theme,\n   }\n }\n\n  findFriend = (friends,fid) =>{\n    return friends.find(friend =>{\n      return fid === friend.uid;\n    })\n  }\n  findGroup = (groups,gid) => {\n    return groups.find(group =>{\n      return group.groupId === gid;\n    })\n  }\n\n  onThemeChangeTheme = (value) =>{\n    if(value){\n      this.props.changeTheme(this.props.authUser,'dark');\n      this.setState({\n        theme:'dark',\n      })\n    }else{\n      this.props.changeTheme(this.props.authUser,'light');\n      this.setState({\n        theme:'light',\n      })\n    }\n  }\n  handleClick = e => {\n    console.log(\"Key Path::\",e.keyPath[1]);\n    switch (e.keyPath[1]) {\n      case 'FRIEND':\n        let friend = this.findFriend(this.props.friends,e.key);\n        this.props.setCurrentChatFriend(friend);\n        break;\n      case 'GROUP':\n        let group = this.findGroup(this.props.groups,e.key);\n        this.props.setCurrentGroup(group);\n        break;\n      default:\n        break;\n    }\n    \n  };\n\n  renderFriends = (friends) =>{\n    return friends.map(friend =>{\n      return ( \n        <Menu.Item\n          key={friend.uid}\n          icon={<FontAwesomeIcon icon = {faUser} style={{marginRight:'10px'}}/>}\n          title={friend.username}\n        >\n          <Link to={`/friends/chat/${friend.uid}`}>\n            <span>{friend.username}</span>\n          </Link>\n          {\n            friend.status === 'pending'?\n            <span style={{marginLeft:10}}>\n            <Badge count={\"pending\"} className=\"site-badge-count-4\" />\n          </span>:null\n          }\n        </Menu.Item>\n      )\n    })\n  }\n\n\n  renderGroups = (groups) => {\n    return groups.map(group => {\n      return (\n        <Menu.Item \n          key = {group.groupId}\n          icon = {<FontAwesomeIcon icon={faUserFriends} style={{marginRight:10}} />}\n          title={group.name}\n        >\n          <Link to= {ROUTE.FRIENDS.GROUPS.MAIN} >{group.name}</Link>\n\n        </Menu.Item>\n      )\n    })\n  }\n\n\n render(){\n     return(\n         <>\n        <Menu\n          theme={this.props.theme?this.props.theme:this.state.theme}\n          onClick={this.handleClick}\n          style={{ width: 256 ,height: \"90vh\"}}\n          defaultOpenKeys={['sub1']}\n          selectedKeys={[this.state.current]}\n          mode=\"inline\"\n        >\n          <Menu.Item key=\"home\" icon={<FontAwesomeIcon icon = {faHome} style={{marginRight:'10px'}}/>} title=\"HOME\">\n            <Link to=\"/\">HOME</Link>\n          </Menu.Item>\n          <Menu.Item key=\"sub1\" icon={<FontAwesomeIcon icon = {faUser} style={{marginRight:'10px'}}/>} title=\"PROFILE\">\n          <Link to=\"/profile\">PROFILE</Link>\n          </Menu.Item>\n          <SubMenu key=\"FRIEND\" icon={<FontAwesomeIcon icon = {faUserFriends} style={{marginRight:'10px'}}/>} title=\"FRIENDS\">\n            <Menu.Item key=\"add-friend\">\n              <Button \n                onClick={this.props.onAddFriend}\n              ><FontAwesomeIcon icon={faPlus} style={{marginRight:10}}/> ADD FRIENDS</Button>\n            </Menu.Item>\n            {this.renderFriends(this.props.friends)}\n\n          </SubMenu>\n          <SubMenu key=\"GROUP\" icon={<FontAwesomeIcon icon = {faUsers} style={{marginRight:'10px'}}/>} title=\"GROUPS\">\n            <Menu.Item key=\"add-friend\">\n              <Button \n                onClick={this.props.onCreateNewGroup}\n              ><FontAwesomeIcon icon={faPlus} style={{marginRight:10}}/>Create Group</Button>\n            </Menu.Item>\n            {this.renderGroups(this.props.groups)}\n            \n          </SubMenu>\n          <SubMenu key=\"sub4\" icon={<FontAwesomeIcon icon = {faCog} style={{marginRight:'10px'}}/>} title=\"SETTING\">\n            <Menu.Item key=\"settings\">\n              <span style={{marginRight:10}}>DARK THEME</span>\n              <Switch\n                    checked={this.props.theme === 'dark'}\n                    onChange={this.onThemeChangeTheme}\n                    checkedChildren=\"On\"\n                    unCheckedChildren=\"Off\"\n                />\n            </Menu.Item>\n            <Menu.Item key=\"language\" icon={<FontAwesomeIcon icon = {faLanguage} style={{marginRight:'10px'}}/>} title=\"language\">\n              <span>LANGUAGE</span>\n            </Menu.Item>\n          </SubMenu>\n          <Menu.Item key=\"aboutus\" icon={<FontAwesomeIcon icon = {faAddressBook} style={{marginRight:'10px'}}/>} title=\"ABOUT US\">\n            <Link to={ROUTE.ABOUT_US}>ABOUT US</Link>\n          </Menu.Item>\n        </Menu>\n         </>\n     )\n }\n}\nconst mapStateToProps = (state) => {\n  return {\n      state,\n      authUser:state.authUser.user.data,\n      theme:state.theme,\n      groups:state.groups.groupList,\n  };\n}\nexport default connect(mapStateToProps,{\n  setCurrentChatFriend,\n  changeTheme,\n  setCurrentGroup,\n})(LeftNavigation);","/home/sainyi/projects/reacts/chat/src/routes/FriendsRoute.js",[],"/home/sainyi/projects/reacts/chat/src/routes/constant.js",[],"/home/sainyi/projects/reacts/chat/src/components/chats/MainChat.js",["226"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport ChatPlace from './ChatPlace';\nimport MessagePlace from './MessagePlace';\n\nclass MainChat extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    findFriendToChat = ({friendList,friendId}) =>{\n        return friendList.find((fri) =>{\n            return fri.uid === friendId;\n        })\n    }\n    componentDidUpdate(){\n        console.log(\"Main Chat\",this.props);\n    }\n   \n    render () {\n        console.log(\"Theme is::::\",this.props.theme);\n        const style = this.props.theme === 'dark'?'bg-secondary':'bg-light';\n        return (\n            <div className={`p-2 h-100 ${style}`}>\n                <ChatPlace \n                    friend={this.findFriendToChat(this.props) }\n                    theme = {this.props.theme}\n                />\n                <MessagePlace \n                    friend={this.findFriendToChat(this.props) }\n                    theme = {this.props.theme}\n                />\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state =>{\n    return state;\n}\n\nexport default connect(mapStateToProps)(MainChat);","/home/sainyi/projects/reacts/chat/src/components/users/Profile/Profile.js",[],"/home/sainyi/projects/reacts/chat/src/components/users/home/Main.js",[],"/home/sainyi/projects/reacts/chat/src/components/chats/ChatPlace.js",[],"/home/sainyi/projects/reacts/chat/src/components/chats/MessagePlace.js",[],"/home/sainyi/projects/reacts/chat/src/components/chats/Messages/MessageList.js",["227"],"import React from 'react';\nimport MessageItem from './MessageItem';\nimport {connect} from 'react-redux';\nimport _ from 'lodash';\n\nclass MessageList extends React.Component{\n    sortMessageByTime = (messages) =>{\n        return _.sortBy(messages, mes=>{\n            return mes.time;\n        })\n    }\n    sliceLastMessages = (messages) => {\n        let temp = messages.reverse().slice(0,10);\n        return temp.reverse();\n    }\n\n    renderMessages = (messages,friend) =>{\n        let tempMsg = [];\n        if(messages.sent && messages.receive){\n            if(friend){\n                let {sent,receive} = messages;\n                let fmessages = [...sent,...receive];\n                tempMsg = fmessages.filter(msg =>{\n                    if(msg.from){\n                        return msg.from === friend.uid;\n                    }\n                    if(msg.to){\n                        return msg.to === friend.uid;\n                    }\n                })\n            }\n        }\n        \n        let sorted = this.sortMessageByTime(tempMsg);\n        sorted = this.sliceLastMessages(sorted);\n        return sorted;\n    }\n\n    render(){\n        return(\n            <div \n             className=\"d-flex flex-column align-items-end\"\n             >\n                <MessageItem \n                    theme = {this.props.theme}\n                    messages = {this.renderMessages(this.props.messages, this.props.chat)} \n                />\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state =>{\n    return {\n        chat:state.message.chat_friend,\n        messages:state.message,\n    }\n}\nexport default connect(mapStateToProps)(MessageList);","/home/sainyi/projects/reacts/chat/src/components/chats/Messages/MessageItem.js",["228"],"import React from 'react';\nimport {Empty} from 'antd';\nimport './Message.css';\nimport _ from 'lodash';\n\nclass MessageItem extends React.Component{\n\n    renderMessage(messages){\n        const style = this.props.theme === 'dark'?'message-dark':'message';\n        if(messages.length === 0){\n            return(\n                <Empty className=\"w-100 align-self-center\" description=\"No Messages or Reload\"/>\n            )\n        }\n        return messages.map( (message,index) => {\n            let align;\n            if(message.to){\n                 align = 'align-self-end';\n            }else{\n                 align = 'align-self-start';\n            }\n            //let time = new Date(message.time.seconds).toString() ;\n            return(\n                <div className={align} key= {index}>\n                    <p className={`${style}`}>\n                      {message.text}\n                    </p>\n                </div>\n            )\n        })\n    }\n\n    render(){\n        return(\n            <>\n            {this.renderMessage(this.props.messages)}\n            </>\n        );\n    }\n}\nexport default MessageItem;","/home/sainyi/projects/reacts/chat/src/components/chats/Messages/TestMessage.js",[],["229","230"],"/home/sainyi/projects/reacts/chat/src/components/Groups/Groups.js",[],"/home/sainyi/projects/reacts/chat/src/components/Groups/GroupsList.js",["231","232","233","234","235"],"import React from 'react';\nimport {List,Avatar, Card} from 'antd';\nimport {  ROUTE } from \"../../routes/constant\";\nimport {Link} from 'react-router-dom';\n\nconst data = [\n    {\n      name: 'Group Awesome',\n    },\n    {\n      name: 'Group Failature',\n    },\n    {\n      name: 'Group Meme',\n    },\n    {\n      name: 'Grouping',\n    },\n  ];\n\nclass GroupsList extends React.Component {\n\n    render() {\n        return(\n            <Card className={this.props.style}>\n                <List\n                    itemLayout = \"horizontal\"\n                    dataSource = {data}\n                    renderItem = { item => (\n                        <List.Item>\n                            <List.Item.Meta\n                            avatar={<Avatar/>}\n                            title={<Link to={`${ROUTE.FRIENDS.GROUPS.CHAT}`}>Go to Group Chat</Link>}\n                            description=\"description of the groups\"\n                            />\n                        </List.Item>\n                    )}\n                >\n                </List>\n            </Card>\n        );\n    }\n}\nexport default GroupsList;",["236","237"],"/home/sainyi/projects/reacts/chat/src/redux/reducers/index.js",[],"/home/sainyi/projects/reacts/chat/src/redux/reducers/UserReducer.js",["238"],"/home/sainyi/projects/reacts/chat/src/redux/actions/Types.js",[],"/home/sainyi/projects/reacts/chat/src/redux/actions/index.js",[],"/home/sainyi/projects/reacts/chat/src/redux/actions/UserActions.js",[],"/home/sainyi/projects/reacts/chat/src/redux/actions/GeneralActions.js",[],"/home/sainyi/projects/reacts/chat/src/redux/reducers/GeneralReducer.js",[],"/home/sainyi/projects/reacts/chat/src/components/users/Account/Account.js",[],"/home/sainyi/projects/reacts/chat/src/components/users/Logout/Logout.js",[],"/home/sainyi/projects/reacts/chat/src/firebase.js",[],"/home/sainyi/projects/reacts/chat/src/components/users/home/Friends/AddFriendModal.js",[],"/home/sainyi/projects/reacts/chat/src/redux/actions/friendsActions.js",["239"],"import {fb,db} from '../../firebase';\nimport { FRIENDS } from './Types';\n\n\nexport const fetchUserByEmail = (email) =>{\n    const ref = db.collection(\"users\").where(\"email\",\"==\",email);\n    return function (dispatch) {\n        ref.get().then((docs)=>{\n            console.log(\"Docs is data\");\n            docs.forEach(doc=>{\n                console.log(doc.data());\n                dispatch({\n                    type:FRIENDS.SEARCH.LIST,\n                    payload:doc.data(),\n                })\n            })\n        })\n        .catch(err=>{\n            console.log(\"Error in get friends data::\",err);\n        })\n        \n    } \n}\n\nexport const addFriend = (friend,user,mode) => dispatch => {\n    const ref = db.collection(\"users\").doc(user.docId).collection(\"friends\").doc();\n    friend.friDoc = ref.id;\n    return ref\n        .set(friend)\n        .then(()=>{\n            console.log(\"successfull add friend\");\n            dispatch(addFriendSuccess(friend));\n            if(mode ==='NOT_ACCEPT'){\n                dispatch(addFriendRequest(friend,user));\n            }else{\n                console.log('Accept Friends Mode');\n            }\n            \n        })\n        .catch(err =>{\n            console.log(\"error add friend\",err);\n        })\n}\n\nexport const editFriendsData = (user,friend) => dispatch =>{\n    const ref = db.collection(\"users\").doc(user.docId)\n        .collection(\"friends\");\n    return ref.get().then((docs) =>{\n        docs.forEach((doc)=>{\n            let user = doc.data();\n            user.status = \"friend\";\n            console.log(user);\n            if(user.uid === friend.uid){\n                console.log('same person update data');\n                doc.ref.update({\n                    status:\"friend\",\n                })\n                dispatch(editFriendsDataSuccess(user));\n                console.log('same person update data');\n            }\n        })\n    })\n    .catch(err =>{\n        console.log(\"Error Update\",err);\n    })\n}\n\nexport const addFriendRequest = (friend,user) => dispatch => {\n    console.log(\"ADD TO FRI REQUEST\")\n    const ref = db.collection(\"users\").doc(friend.docId).collection(\"friendsReq\").doc()\n    user.status = \"pending\";\n    user.friReqDoc = ref.id;\n    return ref\n        .set(user)\n        .then(()=>{\n            console.log(\"successfully add friend request list\");\n            dispatch(addFriendRequestList(friend));\n        })\n        .catch(err =>{\n            console.log(\"err in add friReq List\",err);\n        })\n}\n\nexport const removeFriendRequest = (friend,user) => dispatch =>{\n    return db.collection(\"users\")\n        .doc(user.docId)\n        .collection(\"friendsReq\")\n        .doc(friend.friReqDoc)\n        .delete().then(()=>{\n            console.log(\"Successfully delete\");\n            dispatch(removeFriendRequestSuccess(friend));\n        })\n}\n\nexport const getFriendsList =  (docId) => dispatch =>{\n    console.log(\"Getting friends list\")\n    db.collection(\"users\")\n        .doc(docId)\n        .collection(\"friends\")\n        .get().then( docs => {\n            let friends = [];\n            docs.forEach(doc =>{   \n                friends.push(doc.data()); \n                //dispatch(addFriendSuccess(doc.data()));\n            })\n            dispatch(getFriendsListSuccess(friends));\n        })\n        .catch(err=>{\n            console.log(\"Error get friends\",err);\n        })\n}\n\nexport const getFriendsRequestList = (docId) => dispatch => {\n    console.log('Getting friends Request List');\n    return db.collection(\"users\")\n        .doc(docId)\n        .collection(\"friendsReq\")\n        .get().then(docs =>{\n            docs.forEach(doc =>{\n                console.log(\"Add friends req List\",doc.data());\n                dispatch(addFriendRequestList(doc.data()))\n            })\n        })\n        .catch(err =>{\n            console.log(\"Error in get Friends List\",err);\n        })\n}\n\nexport const addFriendSuccess = (friend) => {\n    return {\n        type:FRIENDS.SUCCESS_ADD_FRIEND,\n        payload:friend,\n    }\n}\n\nexport const getFriendsListSuccess = (friends) => {\n    return {\n        type:FRIENDS.GET_FRIENDS_LIST,\n        payload:friends,\n    }\n}\n\nexport const addFriendRequestList = (friend) => {\n    return {\n        type:FRIENDS.SUCCESS_ADD_FRIEND_REQUEST,\n        payload:friend,\n    }\n\n}\nexport const removeFriendRequestSuccess = (friend) =>{\n    return{\n        type:FRIENDS.REMOVE_FRIEND_REQUEST,\n        payload:friend,\n    }\n}\nexport const editFriendsDataSuccess = (user) =>{\n    return{\n        type:FRIENDS.EDIT_FRIEND_DATA,\n        payload:user,\n    }\n}","/home/sainyi/projects/reacts/chat/src/redux/reducers/friendsReducers.js",[],"/home/sainyi/projects/reacts/chat/src/components/users/home/NotificationDrawer/NotificationDrawer.js",[],"/home/sainyi/projects/reacts/chat/src/redux/actions/messageActions.js",[],"/home/sainyi/projects/reacts/chat/src/redux/reducers/messageReducers.js",[],"/home/sainyi/projects/reacts/chat/src/components/users/home/Groups/NewGroupModal.js",[],"/home/sainyi/projects/reacts/chat/src/redux/actions/groupActions.js",[],"/home/sainyi/projects/reacts/chat/src/redux/reducers/groupReducers.js",["240"],"import { act } from 'react-dom/test-utils';\nimport {GROUP} from '../actions/Types';\n\nconst INITIAL_STATE = {\n    groupList: [],\n    currentGroup:null,\n    currentGmember:[],\n    groupMessages:[],\n}\n\nexport const groupReducers = (state = INITIAL_STATE,action) => {\n    switch (action.type) {\n        case GROUP.CREATE:\n            return{\n                ...state,\n                groupList:[...state.groupList,action.payload]\n            }\n\n        case GROUP.GET:\n            return {\n                ...state,\n                groupList:action.payload,\n            }\n        case GROUP.CURRENT_GROUP:\n            return {\n                ...state,\n                currentGroup:action.payload,\n            }\n        case GROUP.EMPTY:\n            return{\n                ...state,\n                groupList:[],\n            }\n\n        case GROUP.UPDATE_MEMBER:\n            return{\n                ...state,\n                groupList:[...state.groupList.filter(gp=>{\n                    return gp.groupId !== action.payload.groupId;\n                }),action.payload]\n            }\n        case GROUP.GET_MEMBER_INFO:\n            return{\n                ...state,\n                currentGmember:[...state.currentGmember,action.payload]\n            }\n\n        case GROUP.GROUP_MESSAGES_GET:\n            return{\n                ...state,\n                groupMessages:[...state.groupMessages,action.payload]\n            }\n        default:return state;\n    }\n}","/home/sainyi/projects/reacts/chat/src/components/Groups/GroupChat.js",[],"/home/sainyi/projects/reacts/chat/src/components/Groups/GroupChatPlace.js",["241"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport {Card} from 'react-bootstrap';\nimport {getUserInfoByUid} from '../../redux/actions';\nimport { Dropdown,Menu,Button } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { MenuOutlined } from '@ant-design/icons';\nimport { faPlus, faUser } from '@fortawesome/free-solid-svg-icons';\nimport AddGroupMemberModal from './AddGroupMemberModal';\nimport GroupMessagesList from './GroupMessagesList';\n\n\nclass GroupChatPlace extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            addFriendModalVisible:false,\n        }\n    }\n\n    componentDidUpdate(){\n        console.log(\"GRREEFDF:\",this.props);\n    }\n\n\n    renderMembersList = (group,Tstyle) =>{\n         if(group){\n            console.log(\"memeberlist\",group.members);\n            return group.members.map(member =>{\n                return(\n                    <Menu.Item key={member.uid}>\n                        <span style={{color:Tstyle}}>\n                            <FontAwesomeIcon icon={faUser} style={{marginRight:5}} />\n                            {member.username}\n                        </span>\n                    </Menu.Item>\n                )\n            })\n         }\n     }\n\n     renderMenuItems = (group) => {\n        const style = this.props.state.theme === 'dark'?'bg-dark text-white':'bg-light';\n        const Tstyle = this.props.state.theme === 'dark'?'white':'';\n         return(\n             <Menu className={`${style}`}>\n                 <Menu.Item style={{padding:0,margin:0}}>\n                     <span style={{color:'white'}}>\n                    ----------------------------------------------------\n                    </span>\n                 </Menu.Item>\n                 <Menu.Item onClick={()=>this.setState({addFriendModalVisible:true})}>\n                    <span style={{color:Tstyle}}>\n                    <FontAwesomeIcon icon={faPlus} style={{marginRight:5}} />\n                        Add Friend\n                    </span>\n                 </Menu.Item>\n                 \n                 <hr/>\n                 <Menu.Item>\n                   <span className=\"text-primary\">MEMBERS</span> \n                 </Menu.Item>\n                 {this.renderMembersList(group,Tstyle)}\n             </Menu>\n        )\n    }\n\n    renderHeader = (group,txtColor) =>{\n        return(\n            <div>\n                 <div className=\"d-flex justify-content-between align-items-center\">\n                    <p style={{color:`${txtColor}`}}>\n                        {group?group.name:null}\n                    </p>\n\n                    <Dropdown\n                        overlay={this.renderMenuItems(group)} \n                        trigger={['click']}>\n                        <MenuOutlined style={{color:'white'}}/>\n                    </Dropdown>\n                    \n                </div>\n            <hr/>\n            </div>\n        )\n    }\n    \n    render(){\n        const style = this.props.state.theme === 'dark'?'bg-dark':'bg-light';\n        const txtColor = this.props.state.theme === 'dark'?'white':'teal';\n        return(\n            <>\n            <Card\n                className={`p-3 ${style}`}\n                style={{height:\"90%\"}}\n            >\n                <Card.Title>\n                   {this.renderHeader(this.props.group,txtColor)}\n                </Card.Title>\n                <Card.Body>\n                    <GroupMessagesList/>\n                </Card.Body>\n            </Card>\n            <AddGroupMemberModal \n                visible = {this.state.addFriendModalVisible}\n                onCancel = {()=>this.setState({addFriendModalVisible:false})}\n                friends = {this.props.friends}\n                group = {this.props.group}\n            />\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        state,\n        authUser:state.authUser.user.data,\n        friends:state.friend.friends_list,\n    };\n}\nexport default connect(mapStateToProps,{\n    getUserInfoByUid\n})(GroupChatPlace);","/home/sainyi/projects/reacts/chat/src/components/Groups/AddGroupMemberModal.js",["242","243"],"import React from 'react';\nimport {connect} from 'react-redux';\nimport {Modal,Button} from 'antd';\nimport {addMemberToGroups} from '../../redux/actions';\nimport _ from 'lodash';\n\nclass AddGroupMemberModal extends React.Component {\n\n    removeAlredyMembers = (friends,members) => {\n    let tmp = [...friends];\n         for(let i = 0;i<friends.length;i++){\n             members.map(mem =>{\n                 if(mem.uid === friends[i].uid){\n                    tmp.splice(i,1);\n                 }\n             })\n        }\n        return tmp;\n     }\n    \n    onAddFriend = (friend,group ) =>{\n        \n        let fri = {\n            uid:friend.uid,\n            username:friend.username,\n            email:friend.email,\n        }\n        this.props.addMemberToGroups(group,fri);\n        this.props.onCancel();\n    }\n\n    renderFriends = (friends,group) =>{\n        let Ffriends=[];\n        if(group){\n            Ffriends =  this.removeAlredyMembers(friends,group.members);\n        }\n        return Ffriends.map(friend =>{\n            return(\n                <p key={friend.uid}>\n                    <span>{friend.username}</span>\n                    <span style={{float:'right'}}>\n                        <Button\n                            onClick={()=> this.onAddFriend(friend,group)}\n                        >\n                          ADD\n                        </Button>\n                    </span>\n                </p>\n            )\n        })\n    }\n    \n    render(){\n        return(\n            <Modal\n                title={'ADD FRIEND'}\n                visible={this.props.visible}\n                onCancel = {this.props.onCancel}\n            >\n                {this.renderFriends(this.props.friends,this.props.group)}\n\n            </Modal>\n\n        )\n    }\n}\n\n\nconst mapStateToProps = state =>{\n    return {\n        authUser:state.authUser.user.data,\n    }\n}\nexport default connect(mapStateToProps,{\n    addMemberToGroups\n})(AddGroupMemberModal);","/home/sainyi/projects/reacts/chat/src/components/Groups/GroupMessagesList.js",[],"/home/sainyi/projects/reacts/chat/src/components/Groups/GroupMessagesPlace.js",[],"/home/sainyi/projects/reacts/chat/src/components/Groups/GroupMessagesItem.js",["244"],"import React from 'react';\nimport {Empty,Avatar} from 'antd';\nimport './GroupMessage.css';\nimport _ from 'lodash';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\n\nclass GroupMessagesItem extends React.Component {\n    renderMessages(messages){\n        const style = this.props.theme === 'dark'?'message-dark':'message';\n        if(messages.length === 0){\n            return <Empty className=\"w-100 align-self-center\" description=\"No messages or Reload\" />\n        }\n        return messages.map((message,index) => {\n            let align;\n            if(message.from === this.props.user.uid){\n                align = 'align-self-end';\n            }else{\n                align = 'align-self-start';\n            }\n            return (\n                <div className={align} key={index} >\n                    <div className={`${style}`}>\n                        <p style={{fontSize:15}}>\n                            <Avatar \n                                size={25} \n                                style={{marginRight:10}}\n                                icon={<FontAwesomeIcon icon={faUser} />}\n                            />\n                        {message.fromName}\n                        </p>\n                        {message.text}\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    render(){\n        return(\n            <>\n               {this.renderMessages(this.props.messages)}\n            </>\n        )\n    }\n}\n\nexport default GroupMessagesItem;","/home/sainyi/projects/reacts/chat/src/components/users/home/AboutUs/AboutUs.js",[],"/home/sainyi/projects/reacts/chat/src/components/users/home/InfoList.js",["245","246"],"import React from 'react';\nimport { List,Avatar } from 'antd';\nimport {connect} from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {CardGroup,Card} from 'react-bootstrap'\nimport { faCog,faUser, faUserFriends } from '@fortawesome/free-solid-svg-icons';\n\nclass InfoList extends React.Component {\n    constructor(props){\n        super(props);\n    }\n    renderGroupsList = (groups,style) =>{\n        return(\n        <List\n            itemLayout=\"horizontal\"\n            pagination={{\n                position:'top',\n                showSizeChanger:true,\n                defaultPageSize:10,\n                pageSizeOptions:[3,5,10]\n\n            }}\n            dataSource={groups}\n            renderItem = {gp => (\n                <List.Item>\n                    <List.Item.Meta\n                        avatar={<Avatar icon={<FontAwesomeIcon icon={faUserFriends}/>}/>}\n                        title={<span className={style}>{gp.name}</span>}\n                    />\n                    <div><FontAwesomeIcon icon={faCog} style={{fontSize:'1.5em',color:'white'}}/></div>\n                </List.Item>\n            )}\n        >\n\n        </List>)\n\n    }\n\n    renderFriendsList = (friends,style) =>{\n       return( <List\n            itemLayout=\"horizontal\"\n            dataSource={friends}\n            pagination ={{\n                position:'top',\n                showSizeChanger:true,\n                defaultPageSize:10,\n                pageSizeOptions:[3,5,10]\n            }}\n            renderItem = { fri => (\n                <List.Item>\n                    <List.Item.Meta\n                    avatar={<Avatar icon={<FontAwesomeIcon icon={faUser}/>}/>}\n                    title={<span className={style}>{fri.username}</span>}\n                    />\n                    <div><FontAwesomeIcon icon={faCog} style={{fontSize:'1.5em',color:'white'}}/></div>\n                </List.Item>\n                \n            )}\n        >\n        </List>\n       )\n        \n    }\n\n\n\n    render(){\n        const mainMode = this.props.theme==='dark'?'bg-secondary w-100':'bg-light w-100';\n        const card = this.props.theme ==='dark'?'bg-dark text-white':'text-primary';\n        const Lgroups = this.props.groups.groupList;\n        console.log(\"group list:\",Lgroups);\n        return(\n            <CardGroup className={`mt-2`} style={{maxHeight:'80%',minHeight:'80%'}}>\n                <Card  className={`${card} p-3`}>\n                    <Card.Title><h5 className={`${card}`}>FRIENDS LIST</h5></Card.Title>\n                    <Card.Body>{this.renderFriendsList(this.props.friends,card)}</Card.Body>\n                </Card>\n                <div style={{width:8}}></div>\n                <Card className={`${card} p-3`}>\n                    <Card.Title><h5 className={`${card}`}>GROUPS LIST</h5></Card.Title>\n                    <Card.Body>{this.renderGroupsList(Lgroups,card)}</Card.Body>\n                </Card>\n            </CardGroup>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        theme:state.theme,\n        friends:state.friend.friends_list,\n        groups:state.groups,\n    };\n}\nexport default connect(mapStateToProps)(InfoList);","/home/sainyi/projects/reacts/chat/src/components/users/Profile/EditProfileModal.js",[],"/home/sainyi/projects/reacts/chat/src/components/users/Profile/EditProfileForm.js",["247"],{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","severity":1,"message":"253","line":3,"column":8,"nodeType":"254","messageId":"255","endLine":3,"endColumn":9},{"ruleId":"252","severity":1,"message":"256","line":13,"column":15,"nodeType":"254","messageId":"255","endLine":13,"endColumn":21},{"ruleId":"252","severity":1,"message":"257","line":7,"column":10,"nodeType":"254","messageId":"255","endLine":7,"endColumn":14},{"ruleId":"258","severity":1,"message":"259","line":7,"column":5,"nodeType":"260","messageId":"261","endLine":9,"endColumn":6},{"ruleId":"262","severity":1,"message":"263","line":23,"column":48,"nodeType":"264","messageId":"265","endLine":23,"endColumn":50},{"ruleId":"252","severity":1,"message":"253","line":4,"column":8,"nodeType":"254","messageId":"255","endLine":4,"endColumn":9},{"ruleId":"248","replacedBy":"266"},{"ruleId":"250","replacedBy":"267"},{"ruleId":"252","severity":1,"message":"268","line":2,"column":9,"nodeType":"254","messageId":"255","endLine":2,"endColumn":13},{"ruleId":"252","severity":1,"message":"269","line":2,"column":14,"nodeType":"254","messageId":"255","endLine":2,"endColumn":20},{"ruleId":"252","severity":1,"message":"270","line":3,"column":11,"nodeType":"254","messageId":"255","endLine":3,"endColumn":16},{"ruleId":"252","severity":1,"message":"271","line":4,"column":9,"nodeType":"254","messageId":"255","endLine":4,"endColumn":13},{"ruleId":"252","severity":1,"message":"272","line":6,"column":7,"nodeType":"254","messageId":"255","endLine":6,"endColumn":11},{"ruleId":"248","replacedBy":"273"},{"ruleId":"250","replacedBy":"274"},{"ruleId":"252","severity":1,"message":"275","line":1,"column":10,"nodeType":"254","messageId":"255","endLine":1,"endColumn":13},{"ruleId":"252","severity":1,"message":"276","line":1,"column":9,"nodeType":"254","messageId":"255","endLine":1,"endColumn":11},{"ruleId":"252","severity":1,"message":"275","line":1,"column":10,"nodeType":"254","messageId":"255","endLine":1,"endColumn":13},{"ruleId":"252","severity":1,"message":"277","line":5,"column":24,"nodeType":"254","messageId":"255","endLine":5,"endColumn":30},{"ruleId":"252","severity":1,"message":"253","line":5,"column":8,"nodeType":"254","messageId":"255","endLine":5,"endColumn":9},{"ruleId":"262","severity":1,"message":"278","line":12,"column":30,"nodeType":"264","messageId":"279","endLine":12,"endColumn":32},{"ruleId":"252","severity":1,"message":"253","line":4,"column":8,"nodeType":"254","messageId":"255","endLine":4,"endColumn":9},{"ruleId":"258","severity":1,"message":"259","line":9,"column":5,"nodeType":"260","messageId":"261","endLine":11,"endColumn":6},{"ruleId":"252","severity":1,"message":"280","line":68,"column":15,"nodeType":"254","messageId":"255","endLine":68,"endColumn":23},{"ruleId":"281","severity":1,"message":"282","line":33,"column":13,"nodeType":"283","messageId":"284","endLine":33,"endColumn":20},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","'Drawer' is defined but never used.","'PAGE' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["285"],["286"],"'List' is defined but never used.","'Avatar' is defined but never used.","'ROUTE' is defined but never used.","'Link' is defined but never used.","'data' is assigned a value but never used.",["285"],["286"],"'act' is defined but never used.","'fb' is defined but never used.","'Button' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'mainMode' is assigned a value but never used.","no-dupe-keys","Duplicate key 'address'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]